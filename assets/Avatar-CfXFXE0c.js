import{j as s}from"./jsx-runtime-CkxqCPlQ.js";function i({fullName:a,diameter:e,className:t=""}){const r=m(a);return s.jsx("div",{style:{width:e,height:e,fontSize:e/2.1},className:`${t} flex shrink-0 select-none items-center justify-center rounded-full bg-primary/20 font-medium text-primary dark:bg-primary/75 dark:text-white`,children:s.jsx("p",{children:r})})}function m(a){const e=a.trim().split(" ");if(e.length===1)return`${e[0].charAt(0)}`;{const t=e[0].charAt(0),r=e[1].charAt(0);return t+r}}i.__docgenInfo={description:"",methods:[],displayName:"DefaultAvatar",props:{className:{defaultValue:{value:"''",computed:!1},required:!1}}};function l({src:a,diameter:e,className:t="",style:r={}}){return s.jsx("img",{style:{width:e,height:e,...r},className:`${t} shrink-0 select-none rounded-full object-cover`,src:a,draggable:!1})}l.__docgenInfo={description:"",methods:[],displayName:"PictureAvatar",props:{className:{defaultValue:{value:"''",computed:!1},required:!1},style:{defaultValue:{value:"{}",computed:!1},required:!1}}};const p={xxs:28,xs:36,sm:40,base:48,lg:80,xl:128},u=({src:a,diameter:e=80,size:t,className:r="",fullName:o,style:d={}})=>{const n=t?p[t]:e;return a?s.jsx(l,{src:a,diameter:n,className:r,style:d}):s.jsx(i,{diameter:n,className:r,fullName:o})};u.__docgenInfo={description:"Renders an avatar component which can be either a picture or a default avatar with initials.\n\n@param {Object} props - The properties for the Avatar component.\n@param {string} props.fullName - The full name of the user, used to generate initials if no image is provided.\n@param {number} [props.diameter=80] - The diameter of the avatar in pixels. Ignored if `size` is provided.\n@param {SIZE_KEYS} [props.size] - Predefined size for the avatar. If provided, overrides the `diameter`.\n                                  The associated value in `SIZES` will be used as the diameter. Possible values are:\n                                   - `'xxs'`: 28px\n                                   - `'xs'`: 36px\n                                   - `'sm'`: 40px\n                                   - `'base'`: 48px\n                                   - `'lg'`: 80px\n                                   - `'xl'`: 128px\n@param {string|null} [props.src] - The URL of the image to display as the avatar. If not provided, initials are shown\n@param {string} [props.className=''] - Additional CSS classes to apply to the avatar component.\n@param {Object} [props.style={}] - Additional inline styles to apply to the avatar component.\n@returns {JSX.Element} The rendered avatar component.",methods:[],displayName:"Avatar",props:{fullName:{required:!0,tsType:{name:"string"},description:""},diameter:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"80",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'xxs' | 'xs' | 'sm' | 'base' | 'lg' | 'xl'",elements:[{name:"literal",value:"'xxs'"},{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'base'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:""},src:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}},style:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}],raw:"Record<string, string | number>"},description:"",defaultValue:{value:"{}",computed:!1}}}};export{u as A};
